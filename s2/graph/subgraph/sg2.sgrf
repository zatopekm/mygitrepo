<?xml version="1.0" encoding="UTF-8"?>
<Graph author="Kokon" created="Mon Nov 23 16:19:07 CET 2015" guiVersion="0.0.0.devel" id="1448293604094" licenseCode="Commercial Devel" licenseType="Commercial" modified="Mon Nov 23 16:19:07 CET 2015" modifiedBy="Kokon" name="sg2" nature="subgraph" revision="1.0" showComponentDetails="true">
<Global>
<inputPorts>
<singlePort connected="true" name="0"/>
</inputPorts>
<outputPorts>
<singlePort connected="false" name="0"/>
</outputPorts>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="debugInput1" recordDelimiter="\r\n" type="delimited">
<Field name="field1" type="string"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<Dictionary/>
</Global>
<Phase number="0">
<Node debugInput="true" guiName="DebugInput" guiX="30" guiY="100" id="DATA_GENERATOR0" recordsNumber="1" type="DATA_GENERATOR">
<attr name="generate"><![CDATA[//#CTL2

// Generates output record.
function integer generate() {

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the generate. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if generate() throws an exception.
// function integer generateOnError(string errorMessage, string stackTrace) {
// }

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node guiName="SimpleCopy" guiX="450" guiY="100" id="SIMPLE_COPY0" type="SIMPLE_COPY"/>
<Node guiName="SubgraphInput" guiX="200" guiY="5" id="SUBGRAPH_INPUT0" type="SUBGRAPH_INPUT">
<Port guiY="117" name="0"/>
<Port guiY="187" name="1"/>
</Node>
<Node guiName="SubgraphOutput" guiX="800" guiY="5" id="SUBGRAPH_OUTPUT0" type="SUBGRAPH_OUTPUT">
<Port guiY="117" name="0"/>
<Port guiY="187" name="1"/>
</Node>
<Edge fromNode="DATA_GENERATOR0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SUBGRAPH_INPUT0:0"/>
<Edge fromNode="SIMPLE_COPY0:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="SUBGRAPH_OUTPUT0:0"/>
<Edge fromNode="SUBGRAPH_INPUT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="SIMPLE_COPY0:0"/>
</Phase>
</Graph>
